<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liaojiexin.videoweb.mapper.VideoMapper" >
  <resultMap id="BaseResultMap" type="com.liaojiexin.videoweb.entity.Video" >
    <id column="vid" property="vid" jdbcType="INTEGER" />
    <result column="vname" property="vname" jdbcType="VARCHAR" />
    <result column="vtag" property="vtag" jdbcType="CHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="imageurl" property="imageurl" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="special" property="special" jdbcType="VARCHAR" />
    <result column="countcomments" property="countcomments" jdbcType="INTEGER" />
    <result column="countlikes" property="countlikes" jdbcType="INTEGER" />
    <result column="countlooks" property="countlooks" jdbcType="INTEGER" />
    <!-- 多对一的关系 -->
    <!-- column：指的是数据库队列名，property: 指的是属性名称, javaType：指的是属性的类型 -->
    <association property="user" javaType="com.liaojiexin.videoweb.entity.User">
      <id column="uid" property="uid" jdbcType="INTEGER" />
      <result column="username" property="username" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
      <result column="email" property="email" jdbcType="VARCHAR" />
      <result column="birthday" property="birthday" jdbcType="DATE" />
    </association>
    <!-- 一对多的关系 -->
    <!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型 -->
    <collection property="likesKeys" ofType="com.liaojiexin.videoweb.entity.LikesKey">
      <id column="uid" property="uid" jdbcType="INTEGER" />
      <id column="vid" property="vid" jdbcType="INTEGER" />
    </collection>
    <!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型 -->
    <collection property="comments" ofType="com.liaojiexin.videoweb.entity.Comments">
      <id column="commenttime" property="commenttime" jdbcType="TIMESTAMP" />
      <id column="uid" property="uid" jdbcType="INTEGER" />
      <id column="vid" property="vid" jdbcType="INTEGER" />
      <result column="comment" property="comment" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    vid, vname, vtag, date, uid, introduce, url, imageurl, state, special, countcomments, 
    countlikes, countlooks
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from video
    where vid = #{vid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from video
    where vid = #{vid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liaojiexin.videoweb.entity.Video" >
    insert into video (vid, vname, vtag, 
      date, uid, introduce, 
      url, imageurl, state, 
      special, countcomments, countlikes, 
      countlooks)
    values (#{vid,jdbcType=INTEGER}, #{vname,jdbcType=VARCHAR}, #{vtag,jdbcType=CHAR}, 
      #{date,jdbcType=TIMESTAMP}, #{uid,jdbcType=INTEGER}, #{introduce,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{imageurl,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{special,jdbcType=VARCHAR}, #{countcomments,jdbcType=INTEGER}, #{countlikes,jdbcType=INTEGER}, 
      #{countlooks,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liaojiexin.videoweb.entity.Video" >
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vid != null" >
        vid,
      </if>
      <if test="vname != null" >
        vname,
      </if>
      <if test="vtag != null" >
        vtag,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="imageurl != null" >
        imageurl,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="special != null" >
        special,
      </if>
      <if test="countcomments != null" >
        countcomments,
      </if>
      <if test="countlikes != null" >
        countlikes,
      </if>
      <if test="countlooks != null" >
        countlooks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vid != null" >
        #{vid,jdbcType=INTEGER},
      </if>
      <if test="vname != null" >
        #{vname,jdbcType=VARCHAR},
      </if>
      <if test="vtag != null" >
        #{vtag,jdbcType=CHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="special != null" >
        #{special,jdbcType=VARCHAR},
      </if>
      <if test="countcomments != null" >
        #{countcomments,jdbcType=INTEGER},
      </if>
      <if test="countlikes != null" >
        #{countlikes,jdbcType=INTEGER},
      </if>
      <if test="countlooks != null" >
        #{countlooks,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liaojiexin.videoweb.entity.Video" >
    update video
    <set >
      <if test="vname != null" >
        vname = #{vname,jdbcType=VARCHAR},
      </if>
      <if test="vtag != null" >
        vtag = #{vtag,jdbcType=CHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        imageurl = #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="special != null" >
        special = #{special,jdbcType=VARCHAR},
      </if>
      <if test="countcomments != null" >
        countcomments = #{countcomments,jdbcType=INTEGER},
      </if>
      <if test="countlikes != null" >
        countlikes = #{countlikes,jdbcType=INTEGER},
      </if>
      <if test="countlooks != null" >
        countlooks = #{countlooks,jdbcType=INTEGER},
      </if>
    </set>
    where vid = #{vid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liaojiexin.videoweb.entity.Video" >
    update video
    set vname = #{vname,jdbcType=VARCHAR},
      vtag = #{vtag,jdbcType=CHAR},
      date = #{date,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      imageurl = #{imageurl,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      special = #{special,jdbcType=VARCHAR},
      countcomments = #{countcomments,jdbcType=INTEGER},
      countlikes = #{countlikes,jdbcType=INTEGER},
      countlooks = #{countlooks,jdbcType=INTEGER}
    where vid = #{vid,jdbcType=INTEGER}
  </update>
  <!-- 首页查询专题,视频详细信息和用户名,评论数，喜欢数，观看数 -->
  <select id="specialSelect" resultMap="BaseResultMap">
    select video.*,username
    from video,user
    where special=#{special,jdbcType=VARCHAR} and video.uid=user.uid and video.state=1
    order by video.date DESC
  </select>
  <!-- 首页查询分类,视频详细信息和用户名,评论数，喜欢数，观看数 -->
  <select id="labelSelect" resultMap="BaseResultMap">
    select video.*,username
    from video,user
    where video.vtag like concat('%',#{vtag,jdbcType=CHAR},'%') and video.uid=user.uid and video.state=1
    order by video.date DESC
  </select>
  <!-- 首页查询功能,视频详细信息和用户名,评论数，喜欢数，观看数 -->
  <select id="checkSelect" resultMap="BaseResultMap">
    select video.*,username
    from video,user
    where video.vname like concat('%',#{vname,jdbcType=VARCHAR},'%') and video.uid=user.uid and video.state=1
    order by video.date DESC
  </select>
  <!-- 进入播放页时观看数+1 -->
  <update id="updatelooks" parameterType="com.liaojiexin.videoweb.entity.Video" >
    update video set countlooks=countlooks+1 where vid=#{vid,jdbcType=INTEGER}
  </update>
  <!-- 播放页视频的详细信息 -->
  <select id="singlevideo" resultMap="BaseResultMap">
    select video.*,username
    from video,user
    where vid=#{vid,jdbcType=INTEGER} and video.uid=user.uid and video.state=1
    order by video.date DESC
  </select>
  <!-- 最受欢迎的视频 -->
  <select id="countlikes" resultMap="BaseResultMap">
    select video.*,username
    from video,user
    where video.uid=user.uid and video.state=1
    order by video.countlikes DESC limit 3
  </select>
  <!-- 最新视频 -->
  <select id="newestvideo" resultMap="BaseResultMap">
    select video.*,username
    from video,user
    where video.uid=user.uid and video.state=1
    order by video.date DESC limit 4
  </select>
  <!-- 随机视频 -->
  <select id="randvideo" resultMap="BaseResultMap">
    select video.*,username
    from video,user
    where video.uid=user.uid and video.state=1
    order by RAND() DESC limit 6
  </select>
    <!-- 热门视频  -->
  <select id="countlooks" resultMap="BaseResultMap">
    select video.*,username
    from video,user
    where video.uid=user.uid and video.state=1
    order by video.countlooks DESC,video.date DESC limit 5
  </select>
  <!-- 精选视频 和上边的视频模块 -->
  <select id="siftvideo" resultMap="BaseResultMap">
    select video.*,username
    from video,user
    where video.vid=#{vid,jdbcType=INTEGER} and video.uid=user.uid and video.state=1
  </select>
  <!-- 公共模块滚动视频 -->
  <select id="rollvideo" resultMap="BaseResultMap">
    select video.*
    from video
    where video.vtag like concat('%',#{vtag,jdbcType=CHAR},'%') and video.state=1
    order by countcomments DESC limit 1
  </select>
  <!-- 插入评论时，视频表的评论数加1 -->
  <update id="updatecomments" parameterType="com.liaojiexin.videoweb.entity.Video" >
    update video set countcomments=countcomments+1 where vid=#{vid,jdbcType=INTEGER}
  </update>
  <!-- 投票时，视频表的喜欢数加1 -->
  <update id="addlikes" parameterType="com.liaojiexin.videoweb.entity.Video" >
    update video set countlikes=countlikes+1 where vid=#{vid,jdbcType=INTEGER}
  </update>
  <!-- 取消投票时，视频表的喜欢数减1 -->
  <update id="subtractlikes" parameterType="com.liaojiexin.videoweb.entity.Video" >
    update video set countlikes=countlikes-1 where vid=#{vid,jdbcType=INTEGER}
  </update>
  <!-- 个人中心视频管理 查出视频-->
  <select id="selectPersonalVideo" resultType="com.liaojiexin.videoweb.entity.Video">
    select video.* from video
    where uid=#{uid}
    <if test="vname != null">
    and video.vname like concat('%',#{vname,jdbcType=VARCHAR},'%')
    </if>
    order by video.date DESC
  </select>
  <!-- 个人中心视频管理 删除视频-->
  <delete id="deletePersonalVideo" >
    delete from video where vid=#{vid}
  </delete>
  <!-- 个人中心喜欢的视频查询 -->
  <select id="selectLikeVideo" resultMap="BaseResultMap">
    select video.*,username from video,user,likes
    where likes.uid=#{uid} and likes.vid=video.vid and video.uid=user.uid and video.state=1
    <if test="vname != null">
      and video.vname like concat('%',#{vname,jdbcType=VARCHAR},'%')
    </if>
    order by video.date DESC
  </select>
  <!--  上传视频  -->
  <insert id="inservideo" parameterType="com.liaojiexin.videoweb.entity.Video">
    insert into video (vname, vtag,
      date, uid, introduce,url)
    values (#{vname,jdbcType=VARCHAR}, #{vtag,jdbcType=CHAR},
      #{date,jdbcType=TIMESTAMP}, #{uid,jdbcType=INTEGER}, #{introduce,jdbcType=VARCHAR},
      #{url,jdbcType=VARCHAR})
  </insert>
<!--查出未审核的视频-->
  <select id="selectPersonalVideo1" resultMap="BaseResultMap">
    select video.*,username from video,user
    where video.state=0 and video.uid=user.uid
    <if test="vname != null">
      and video.vname like concat('%',#{vname,jdbcType=VARCHAR},'%')
    </if>
    order by video.date DESC
  </select>
</mapper>